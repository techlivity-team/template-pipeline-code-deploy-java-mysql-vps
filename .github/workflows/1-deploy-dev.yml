name: 1 Deploy Dev to VPS

on:
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    name: üß± Build app (dev)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Instalar JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build com Maven
        working-directory: app
        run: mvn clean package -DskipTests

      - name: Verificar se o JAR foi gerado
        run: ls -lh app/target/

      - name: Salvar artefato
        uses: actions/upload-artifact@v4
        with:
          name: app-jar-dev
          path: app/target/api-teste-mysql-0.0.1-SNAPSHOT.jar

  upload:
    name: üöÄ Enviar JAR (dev) para VPS
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Baixar artefato
        uses: actions/download-artifact@v4
        with:
          name: app-jar-dev

      - name: Verificar conte√∫do do diret√≥rio atual
        run: ls -lh

      - name: Instalar sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Copiar JAR para VPS
        run: |
          sshpass -p "${{ secrets.VPS_PASSWORD }}" \
          ssh -o PreferredAuthentications=password -o PubkeyAuthentication=no -o StrictHostKeyChecking=no \
          ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p /home/ubuntu/develop"
          
          sshpass -p "${{ secrets.VPS_PASSWORD }}" \
          scp -o PreferredAuthentications=password -o PubkeyAuthentication=no -o StrictHostKeyChecking=no \
          api-teste-mysql-0.0.1-SNAPSHOT.jar \
          ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/ubuntu/develop/

  shutdown:
    name: üõë Parar inst√¢ncia antiga (dev)
    runs-on: ubuntu-latest
    needs: upload

    steps:
      - name: Finalizar processo antigo (porta 8081)
        run: |
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
          ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
          'PID=$(lsof -ti:8081); \
           if [ -n "$PID" ]; then kill -9 $PID; fi'

  deploy:
    name: üö¶ Iniciar aplica√ß√£o via tmux (dev)
    runs-on: ubuntu-latest
    needs: shutdown

    steps:
      - name: Rodar aplica√ß√£o via tmux
        run: |
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
          ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
          'tmux kill-session -t app-dev 2>/dev/null || true && \
           cd /home/ubuntu/develop && \
           tmux new-session -d -s app-dev "java -jar api-teste-mysql-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev"'

  health-check:
    name: ü©∫ Verificar aplica√ß√£o (dev)
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Esperar aplica√ß√£o subir
        run: sleep 20

      - name: Verificar status
        run: |
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.VPS_HOST }}:8081/actuator/health)
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "‚ùå Falha no Health Check. Status: $HTTP_STATUS"
            exit 1
          else
            echo "‚úÖ Aplica√ß√£o est√° no ar (200 OK)"
          fi
    
